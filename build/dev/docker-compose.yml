version: '3.1'

services:

  wallet-db:
    image: mysql:8.2.0
    container_name: wallet-db
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    # command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - "3306:3306"
    command: --init-file /docker-entrypoint-initdb.d/database_creation.sql
    networks:
    - wallet-network
    volumes:
      - ../../scripts/mysql/database_creation.sql:/docker-entrypoint-initdb.d/database_creation.sql
      - ../../scripts/mysql/database_init_load.sql:/docker-entrypoint-initdb.d/database_init_load.sql
      - ../../scripts/mysql/database_drop_tables.sql:/docker-entrypoint-initdb.d/database_drop_tables.sql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.17.14
    container_name: apm-server
    depends_on:
      elasticsearch-apm:
        condition: service_healthy
      kibana-apm:
        condition: service_healthy
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    networks:
    - wallet-network
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch-apm:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  elasticsearch-apm:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.14
    container_name: elasticsearch-apm
    environment:
    - bootstrap.memory_lock=true
    - cluster.name=docker-cluster
    - cluster.routing.allocation.disk.threshold_enabled=false
    - discovery.type=single-node
    - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
    - esdata:/usr/share/elasticsearch/data
    ports:
    - 9200:9200
    networks:
    - wallet-network
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  kibana-apm:
    image: docker.elastic.co/kibana/kibana:7.17.14
    container_name: kibana-apm
    depends_on:
      elasticsearch-apm:
        condition: service_healthy
    environment:
      ELASTICSEARCH_URL: http://elasticsearch-apm:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch-apm:9200
    ports:
    - 5601:5601
    networks:
    - wallet-network
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

  keycloack-db:
    image: mysql:8.2.0
    container_name: keycloack-db
    volumes:
      - keycloack_data:/var/lib/mysql
    networks:
    - wallet-network
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
  
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    container_name: keycloak
    networks:
    - wallet-network
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: keycloack-db
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: 123456
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the MySQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "connectTimeout=30000"
    ports:
      - 8081:8080
    command: start-dev
    depends_on:
      - keycloack-db
  
volumes:
  esdata:
    driver: local
  keycloack_data:
    driver: local

networks:
  wallet-network:
    driver: bridge
